@charset "UTF-8";
/***
    The new CSS reset - version 1.8.3 (last updated 21.1.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Mono:wght@400;700&family=Piazzolla:ital,opsz,wght@0,8..30,100..900;1,8..30,100..900&display=swap");
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
pre {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

.eczar {
  font-family: "Piazzolla", Book Antiqua, Palatino, Palatino Linotype, Palatino LT STD, Georgia, serif;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

.ibm-plex-mono-regular, a, .cv-container h2, .cv-info {
  font-family: "IBM Plex Mono", Andale Mono, monaco, Consolas, Lucida Console, monospace;
  font-weight: 400;
  font-style: normal;
}

.ibm-plex-mono-bold {
  font-family: "IBM Plex Mono", Andale Mono, monaco, Consolas, Lucida Console, monospace;
  font-weight: 700;
  font-style: normal;
}

:root {
  background-color: #1c1d1f;
  color: #edeff0;
  font-family: "Piazzolla", Book Antiqua, Palatino, Palatino Linotype, Palatino LT STD, Georgia, serif;
  font-size: 16px;
  line-height: 1.5em;
}

html {
  height: 100%;
  font-size: 16px;
}

body {
  min-height: 100%;
  display: grid;
  grid-template-rows: auto 1fr auto;
  justify-content: center;
  font-size: 1rem;
  color: #edeff0;
}

main {
  padding: 0 1.5rem;
  max-width: 42rem;
  width: 100%;
}

h1,
h2,
h3 {
  font-weight: bold;
}

h1 {
  font-size: 3rem;
}

h2 {
  font-size: 2.5rem;
}

h3 {
  font-size: 2rem;
}

p,
li {
  font-size: 1.25rem;
  font-weight: 200;
  line-height: 1.75;
}

a {
  color: #f0d444;
  text-decoration: none;
  background-image: linear-gradient(90deg, rgba(240, 212, 68, 0.5) 0%, rgba(240, 212, 68, 0.5) 50%, rgba(240, 212, 68, 0.5) 100%);
  background-size: 100% 1px;
  background-repeat: no-repeat;
  background-position-y: 100%;
  transition: background-image 300ms ease-in-out;
}
a:hover {
  animation: squiggle 0.3s infinite;
  background-image: linear-gradient(90deg, #f0d444 0%, #f0d444 50%, #f0d444 100%);
}
a:focus-visible {
  animation: squiggle 0.3s infinite;
  outline-style: solid;
  outline-color: #f1aaaa;
  outline-width: 1px;
  outline-offset: 4px;
  border-radius: 2px;
}

.rule {
  background-color: #2d2e2f;
  width: 100%;
  height: 1px;
}

::selection {
  color: #ffffff;
  background: #62540d;
}

.home {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
  color: #dfe1e2;
}
.home h1 {
  font-size: 1.25rem;
  font-weight: 200;
  margin-bottom: 0.5rem;
}
.home h1 span {
  filter: saturate(0.5);
  padding-left: 0.25rem;
  color: #f1aaaa;
}
.home ul {
  padding-left: 2.5rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-top: -1rem;
}
.home li {
  list-style: disc;
  padding-left: 0.5rem;
}

.cv-container {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}
@media (max-width: 950px) {
  .cv-container {
    gap: 2.5rem;
  }
}
.cv-container h2 {
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: #eacb2a;
  margin-bottom: -0.5rem;
}

.cv-component {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.cv-info {
  position: sticky;
  top: 0;
  background-color: #1c1d1f;
  padding: 2rem 0 0.5rem;
  display: flex;
  flex-direction: column;
  gap: 0.125rem;
  color: #71767a;
}
.cv-info::after {
  content: "";
  width: 100%;
  height: 2rem;
  background: linear-gradient(to bottom, #1c1d1f, transparent);
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  z-index: 1;
}
@media (max-width: 950px) {
  .cv-info {
    padding-top: 0.5rem;
  }
}
.cv-info .cv-title {
  color: #dfe1e2;
}

/*# sourceMappingURL=global.css.map */
